<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>블로그 이름</title>
    <description>설명</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 14 May 2020 17:38:18 +0900</pubDate>
    <lastBuildDate>Thu, 14 May 2020 17:38:18 +0900</lastBuildDate>
    <generator>Jekyll v4.0.1</generator>
    
      <item>
        <title>npm에 대해</title>
        <description>&lt;h2 id=&quot;npmnode-package-manager이란&quot;&gt;npm(Node Package Manager)이란&lt;/h2&gt;
&lt;h3 id=&quot;개념&quot;&gt;개념&lt;/h3&gt;
&lt;p&gt;node.js 패키지 관리자 
-&amp;gt; node.js에서 사용하는 모듈들을 패키지로 만들어 npm을 통해 관리, 배포
(node.js 설치 시 자동으로 설치된다)&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;다른 언어에서 비슷한 개념
python의 pip
ruby의 Gem
java의 jpm 등&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;기능&quot;&gt;기능&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;node.js에서 사용할 수 있는 모듈들을 패키지화하여 모아둔 저장소 역할&lt;/li&gt;
  &lt;li&gt;패키지 설치 및 관리를 위한 CLI(Command line interface) 제공&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;packagejson과-의존성-관리&quot;&gt;package.json과 의존성 관리&lt;/h2&gt;
&lt;p&gt;Node.js 프로젝트에서는 많은 패키지를 사용하게 되고 패키지의 버전도 빈번하게 업데이트되므로 프로젝트가 의존하고 있는 패키지를 일괄 관리할 필요가 있다.&lt;br /&gt;npm은 package.json 파일을 통해서 프로젝트 정보와 패키지의 의존성(dependency)을 관리한다.&lt;/p&gt;

&lt;p&gt;이미 작성된 package.json이 있다면 팀 내에 배포하여 동일한 개발 환경을 빠르게 구축할 수 있는 장점이 있다.&lt;br /&gt;package.json은 Java의 maven에서 pom.xml과 비슷한 역할을 한다.&lt;/p&gt;

&lt;p&gt;package.json을 생성하려면 프로젝트 루트에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt; 명령어를 실행한다.
&lt;img src=&quot;npm-init.png&quot; alt=&quot;npm-init&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;spring boot의 경우, 주로 프런트엔드 라이브러리 관리를 위해 npm을 사용한다.&lt;br /&gt;따라서 정적 자원을 제공하는 디렉토리(src/resources/static)에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm init&lt;/code&gt;을 입력했다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;여러 옵션을 추가하는 질문을 넘어가면 완료된다. 
(질문 없이 바로 생성하고 싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;-f&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;-y&lt;/code&gt; 중 하나의 플래그를 추가하면 된다.)&lt;/p&gt;

&lt;p&gt;프로젝트 루트에 package.json 파일이 생성되었다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 명령어를 통해 패키지를 설치할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;패키지-설치&quot;&gt;패키지 설치&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 명령어 뒤에 설치할 패키지 이름을 지정한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &amp;lt;package명&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;npm-package-install.png&quot; alt=&quot;npm-package-install&quot; /&gt; 
npm install 명령어로 jquery를 설치한다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bootstrap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^4.4.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jquery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^3.5.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;설치가 완료된 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; 파일의 &lt;code class=&quot;highlighter-rouge&quot;&gt;dependencies&lt;/code&gt;에 jquery가 추가된 것을 확인할 수 있다. 
&lt;img src=&quot;npm-package-folder.png&quot; alt=&quot;npm-package-folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;node_modules 폴더가 생성되고 내부에 패키지가 설치된다.&lt;/p&gt;

&lt;h2 id=&quot;지역-설치와-전역-설치&quot;&gt;지역 설치와 전역 설치&lt;/h2&gt;
&lt;p&gt;npm install 명령어에는 지역(local) 설치와 전역(global) 설치 옵션이 있다. 옵션을 별도로 지정하지 않으면 지역으로 설치되며, 프로젝트 루트 디렉터리에 node_modules 디렉터리가 자동 생성되고 그 안에 패키지가 설치된다. 
지역으로 설치된 패키지는 해당 프로젝트 내에서만 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;전역에 패키지를 설치하려면 npm install 명령어에 &lt;code class=&quot;highlighter-rouge&quot;&gt;-g&lt;/code&gt; 옵션을 지정한다. 
전역으로 설치된 패키지는 전역에서 참조할 수 있다. 모든 프로젝트가 공통 사용하는 패키지는 지역으로 설치하지 않고 전역에 설치한다.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# 전역 설치 방법 &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &amp;lt;package명&amp;gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;전역에 설치된 패키지는 OS에 따라 설치 장소가 다르다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;macOS의 경우
/usr/local/lib/node_modules&lt;/li&gt;
  &lt;li&gt;윈도우의 경우
c:\Users\%USERNAME%\AppData\Roaming\npm\node_modules&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;스크립트-사용&quot;&gt;스크립트 사용&lt;/h2&gt;
&lt;p&gt;package.json의 scripts 부분에 복잡한 명령어들을 npm script로 만들어 간단하게 사용할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;start&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;node app.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;build&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;webpack ./src/app.js ./out/bundle.js&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

  &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;start, build는 각각 스크립트의 key이고, key를 통해 우측 명령어를 실행시킬 수 있다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;npm run &amp;lt;스크립트 key&amp;gt;&lt;/code&gt; 명령어를 통해 각 key에 해당하는 명령어를 실행시킨다.&lt;/p&gt;

&lt;p&gt;즉, package.json 이 존재하는 디렉토리에서 npm run build 라는 명령어를 입력하면 webpack ./src/app.js ./out/bundle.js 라는 명령어가 실행된다.&lt;br /&gt; 
여기서 start 라는 스크립트는 특별히 npm run start 대신 npm start 만 입력해도 무방하다.&lt;/p&gt;

&lt;h3 id=&quot;활용&quot;&gt;활용&lt;/h3&gt;
&lt;p&gt;다른 명령어는 아래 링크에서 확인&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.zerocho.com/category/NodeJS/post/58285e4840a6d700184ebd87&quot;&gt;https://www.zerocho.com/category/NodeJS/post/58285e4840a6d700184ebd87&lt;/a&gt;
&lt;a href=&quot;https://hudi.kr/npm-%EC%86%8C%EA%B0%9C-%EB%B0%8F-%ED%99%9C%EC%9A%A9/&quot;&gt;https://hudi.kr/npm-%EC%86%8C%EA%B0%9C-%EB%B0%8F-%ED%99%9C%EC%9A%A9/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;빌드&quot;&gt;빌드&lt;/h3&gt;
&lt;p&gt;프런트엔드 서버와 백엔드 서버를 모두 빌드 해줘야한다.
아래 링크를 통해 빌드 방법을 참고하면 된다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://velog.io/@max9106/SpringBoot-NPM&quot;&gt;https://velog.io/@max9106/SpringBoot-NPM&lt;/a&gt;&lt;br /&gt;
 &lt;a href=&quot;https://velog.io/@essri/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%95%A8%EA%BB%98-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0-a1k2l5olr2&quot;&gt;https://velog.io/@essri/%EC%8A%A4%ED%94%84%EB%A7%81%EB%B6%80%ED%8A%B8-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%ED%95%A8%EA%BB%98-%EB%B9%8C%EB%93%9C%ED%95%98%EA%B8%B0-a1k2l5olr2&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;packagejson&quot;&gt;package.json&lt;/h2&gt;
&lt;p&gt;package.json은 프로젝트 정보와 의존성을 관리하는 문서이다.&lt;br /&gt;
node.js 프로젝트 진행 시, 프로젝트 소스가 모듈에 의존하고 있기 때문에 모듈의 버전에 따라 문제가 생길 여지가 있다. 
이미 작성된 package.json 문서는 어느 곳에서도 동일한 개발 환경을 구축할 수 있게 해준다.&lt;/p&gt;

&lt;p&gt;express나 npm init 등의 명령어를 통해 package.json을 자동생성하지 않는 경우에는 모듈의 버전관리를 위해 직접 package.json을 만들어줘야 한다.&lt;/p&gt;

&lt;p&gt;아래는 package.json 파일의 예시이다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;index.js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;echo &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Error: no test specified&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &amp;amp;&amp;amp; exit 1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;license&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ISC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bootstrap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^4.4.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;//라이브러리&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;버전&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;명시&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jquery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;^3.5.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;package.json 파일의 옵션과 구성(작성법)은 아래 링크에서 참고하면 된다.
&lt;a href=&quot;https://programmingsummaries.tistory.com/385&quot;&gt;https://programmingsummaries.tistory.com/385&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;일반적으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install &amp;lt;package명&amp;gt;&lt;/code&gt;을 입력해 모듈을 설치하지만, package.json에 모듈 목록을 작성 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; 명령어를 입력하면 npm이 package.json 파일의 dependencies 부분에 명시된 모듈들을 모두 설치해준다.&lt;/p&gt;

&lt;p&gt;모듈의 버전 표기는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;version : 완전히 일치하는 버전&lt;/li&gt;
  &lt;li&gt;=version : 완전히 일치하는 버전&lt;/li&gt;
  &lt;li&gt;&amp;gt;version : 큰 버전&lt;/li&gt;
  &lt;li&gt;&amp;gt;=version : 크거나 같은 버전&lt;/li&gt;
  &lt;li&gt;&amp;lt;version : 작은 버전&lt;/li&gt;
  &lt;li&gt;&amp;lt;=version : 작거나 같은 버전&lt;/li&gt;
  &lt;li&gt;~version : 버전범위. ~0.2이면 0.2부터 0.3보다 작은 범위&lt;/li&gt;
  &lt;li&gt;1.2.x : x 표기도 가능&lt;/li&gt;
  &lt;li&gt;^version : 다음 링크 참고 &lt;a href=&quot;https://blog.outsider.ne.kr/1041&quot;&gt;https://blog.outsider.ne.kr/1041&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm update로 모듈들을 최신 버전으로 업데이트 하려고 할때도 package.json에 명시된 버전에 따라서만 업데이트가 되기 때문에 특정버전을 명시한 모듈의 경우는 최신버전이 있다고 하더라도 업데이트 되지 않는다.&lt;/p&gt;

&lt;h3 id=&quot;package-lockjson-이란&quot;&gt;package-lock.json 이란?&lt;/h3&gt;
&lt;p&gt;npm을 사용해서 node_modules 트리나 package.json 파일을 수정하게 되면 자동으로 생성되는 파일로, 
파일이 생성되는 시점의 의존성 트리에 대한 정보를 가지고 있다.&lt;/p&gt;

&lt;p&gt;package-lock.json의 개념에 대한 자세한 설명은 아래 링크를 참고&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://trustyoo86.github.io/npm/2018/01/10/package-lock-introduction.html&quot;&gt;https://trustyoo86.github.io/npm/2018/01/10/package-lock-introduction.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;package-lock.json 파일 확인 시 다음과 같은 내용을 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;static&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;lockfileVersion&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;requires&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bootstrap&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4.4.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;resolved&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://registry.npmjs.org/bootstrap/-/bootstrap-4.4.1.tgz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;integrity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sha512-tbx5cHubwE6e2ZG7nqM3g/FZ5PQEDMWmMGNrCUBVRPHXTJaH7CBDdsLeu3eCh3B1tzAxTnAbtmrzvWEvT2NNEA==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;jquery&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;3.5.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;resolved&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://registry.npmjs.org/jquery/-/jquery-3.5.0.tgz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;integrity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sha512-Xb7SVYMvygPxbFMpTFQiHh1J7HClEaThguL15N/Gg37Lri/qKyhRGZYzHRyLH8Stq3Aow0LsHO2O2ci86fCrNQ==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;package-lockjson이-필요한-이유&quot;&gt;package-lock.json이 필요한 이유&lt;/h3&gt;
&lt;p&gt;아래 링크 참고&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hyunjun19.github.io/2018/03/23/package-lock-why-need/&quot;&gt;https://hyunjun19.github.io/2018/03/23/package-lock-why-need/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;reference&quot;&gt;Reference&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://velog.io/@max9106/SpringBoot-NPM&quot;&gt;https://velog.io/@max9106/SpringBoot-NPM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.outsider.ne.kr/665&quot;&gt;https://blog.outsider.ne.kr/665&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 May 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-05/about-npm</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-05/about-npm</guid>
        
        
      </item>
    
      <item>
        <title>SOP와 CORS</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;No ‘Access-Control-Allow-Origin’ header is present on the requested resource.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;웹 개발시 자바스크립트로 외부 서버의 경로로 ajax 요청을 날리면 위와 같은 에러 메세지를 볼 수 있다. 이는 자바스크립트 엔진 표준 스펙에 &lt;code class=&quot;highlighter-rouge&quot;&gt;same-origin policy(동일 출처 정책)&lt;/code&gt;라는 보안 규칙이 있기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;sop-same-origin-policy&quot;&gt;SOP (Same-Origin Policy)&lt;/h2&gt;
&lt;p&gt;protocol, port, domain이 같다면 두 페이지는 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt;을 가진다. 
(보통 URL을 통해 페이지의 origin을 확인할 수 있다)&lt;/p&gt;

&lt;p&gt;각 origin의 리소스(cookies, DOM, script 등)는 같은 origin을 가지는 페이지에서만 읽기/쓰기가 가능하다.&lt;/p&gt;

&lt;p&gt;이를 보완하기 위해 서버측에서 CORS를 이용할 수 있다. 
&lt;img src=&quot;sop.png&quot; alt=&quot;sop, cors&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cors-cross-origin-resource-sharing&quot;&gt;CORS (Cross-Origin Resource Sharing)&lt;/h2&gt;
&lt;p&gt;CORS(Cross-Origin Resource Sharing) 란, 웹 서버 도메인간 액세스 제어 기능을 제공하여 보안 도메인간 데이터 전송을 가능하게 해준다.
서버에서 외부 요청을 허용할 경우 ajax요청이 가능해지는 방식이다.&lt;/p&gt;

&lt;h3 id=&quot;동작방식&quot;&gt;동작방식&lt;/h3&gt;
&lt;p&gt;브라우저는 다른 도메인으로 요청을 보내기 전에 다음과 같은 순서로 동작한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;“preflight” 확인 요청을 OPTIONS method로 전송
요청 시 Http Header의 속성으로 “Origin”에 자신의 도메인을 전송&lt;/li&gt;
  &lt;li&gt;이 요청을 받은 서버는 정상적인 요청인지 확인하여, 정상적인 요청이면 Response에 허용 가능한 도메인(Access-Control-Allow-Origin), Method(Access-Control-Allow-Methods), Header 속성(Access-Control-Allow-Headers)  등을 설정하여 응답&lt;/li&gt;
  &lt;li&gt;OPTIONS 요청에 대해 수신을 받은 브라우저는 Header의 “Access-Control-Allow-*” 정보를 이용하여 요청을 보낼 수 있는지 판단하여 권한이 없는 경우 위와 같은 에러 처리를 하고 요청을 보낼 수 있으면 요청 전송&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;cors_flow.png&quot; alt=&quot;cors flow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같은 흐름에서 브라우저가 1, 3번은 처리를 자동으로 하기 때문에 개발자나 시스템 운영자는 2번에 대한 설정을 해야만 한다. 
2번을 해결하기 위해서는 서버측에서는 다음 두가지 설정이 필요하다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API로 공개되는 모든 URL에 대해 OPTIONS Routes 설정 및 Http Response 설정&lt;/li&gt;
  &lt;li&gt;API URL에 대한 Http Response 설정&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;활용방법&quot;&gt;활용방법&lt;/h3&gt;
&lt;p&gt;서버에서는 브라우저에 다음과 같은 키를 header에 보내줘야 한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Access-Control-Allow-Orgin&lt;/strong&gt; : 요청을 보내는 페이지의 출처 (*, 도메인)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Access-Control-Allow-Methods&lt;/strong&gt; : 요청을 허용하는 메소드 (Default : GET, POST, HEAD)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Access-Control-Max-Age&lt;/strong&gt; : 클라이언트에서 pre-flight의 요청 결과를 저장할 시간 지정. 해당 시간 동안은 pre-flight를 다시 요청하지 않는다.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Access-Control-Allow-Headers&lt;/strong&gt; : 요청을 허용하는 헤더&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아래 방법은 Spring boot로 개발 시 서버 측에서 CORS 요청을 핸들링하는 방법이다.&lt;/p&gt;

&lt;h4 id=&quot;controller-지정&quot;&gt;Controller 지정&lt;/h4&gt;
&lt;p&gt;API에  &lt;code class=&quot;highlighter-rouge&quot;&gt;@CrossOrigin&lt;/code&gt;을 사용해 개별적으로 허용해준다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@CrossOrigin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{value}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;global하게-지정&quot;&gt;Global하게 지정&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WebMvcConfigurer&lt;/code&gt;를 구현하거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Bean&lt;/code&gt;으로 등록해준다.&lt;/p&gt;

&lt;p&gt;WebConfig.java&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebConfig&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebMvcConfigurer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addCorsMappings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CorsRegistry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HEAD&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PUT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DELETE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PATCH&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OPTIONS&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;allowedOrigins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;WebMvcConfigurer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webMvcConfigurer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WebMvcConfigurer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;addCorsMappings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CorsRegistry&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;registry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/**&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;allowedOrigins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;allowedMethods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;HEAD&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PUT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;DELETE&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PATCH&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;OPTIONS&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://kimyhcj.tistory.com/263&quot;&gt;https://kimyhcj.tistory.com/263&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://brunch.co.kr/@adrenalinee31/1&quot;&gt;https://brunch.co.kr/@adrenalinee31/1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.popit.kr/corss-domain-api-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%84%B1/&quot;&gt;https://www.popit.kr/corss-domain-api-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%84%B1/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 08 May 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-05/SOP-CORS</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-05/SOP-CORS</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>JPA - Repository에 대해</title>
        <description>&lt;h2 id=&quot;repository&quot;&gt;Repository&lt;/h2&gt;
&lt;p&gt;Repository는 Entity 조작에 필요한 쿼리를 메서드화해서 사용할 수 있는 역할을 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;JpaRepository.png&quot; alt=&quot;JpaRepository class diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Repository 인터페이스는 Spring Data JPA에서 제공하는 미리 만들어진 Repository 인터페이스들을 상속받는다.
상속을 통해 다음과 같은 기능을 제공한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;method&lt;/th&gt;
      &lt;th&gt;기능&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;save()&lt;/td&gt;
      &lt;td&gt;레코드 저장 (insert, update)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;findOne()&lt;/td&gt;
      &lt;td&gt;기본키로 레코드 한 건 찾기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;findAll()&lt;/td&gt;
      &lt;td&gt;전체 레코드 불러오기&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;count()&lt;/td&gt;
      &lt;td&gt;레코드 갯수 반환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;delete()&lt;/td&gt;
      &lt;td&gt;레코드 삭제&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;em&gt;findOne()은 fineById()로 교체된 것 같다&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;사용-방법&quot;&gt;사용 방법&lt;/h3&gt;
&lt;p&gt;아래는 JpaRepository를 상속하고 ProjectEntity를 조작하는 Repository이다.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;첫 번째 인자로는 해당 Entity 클래스명을, 두 번째 인자로는 ID 타입이 될 수 있는 Long(Int)을 입력한다.&lt;/p&gt;

&lt;p&gt;만들어진 Repository는 다음과 같은 방식으로 이용할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectInfoController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;ProjectInfoRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectInfoRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/project-info/{id}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectInfo&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getProjectInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@PathVariable&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseLong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nc&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProjectInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getProjectInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectInfoRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findById&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;projectId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;ProjectInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectInfo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getProjectInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;상속을 통해 제공되는 기본 기능을 제외한 다른 기능을 추가하고 싶으면, 규칙에 맞는 사용자 정의 메서드를 추가해야 한다.
규칙은 다음과 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;method&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;findBy로 시작&lt;/td&gt;
      &lt;td&gt;쿼리를 요청하는 메서드&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;countBy로 시작&lt;/td&gt;
      &lt;td&gt;쿼리 결과 레코드 수를 요청하는 메서드&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;findBy&lt;/strong&gt; method 예제
아래와 같은 방식으로 findBy로 시작되는 메서드를 정의하고 사용할 수 있다.
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JPAMain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
                  &lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;조현진&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;메서드의 반환형이 객체면 하나의 결과만을 전달하고,&lt;br /&gt;반환형이 List라면 쿼리 조건에 맞는 모든 객체를 전달한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;countBy&lt;/strong&gt; method 예제
아래 메서드는 사용 시 targetId에 해당하는 row 수를 반환한다.
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Integer&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;countByTargetId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;targetId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targetId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;메소드에 포함할 수 있는 키워드는 다음과 같다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;키워드&lt;/th&gt;
      &lt;th&gt;예시&lt;/th&gt;
      &lt;th&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;And&lt;/td&gt;
      &lt;td&gt;findByEmailAndUser(String email, String userId)&lt;/td&gt;
      &lt;td&gt;여러 필드를 and로 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Or&lt;/td&gt;
      &lt;td&gt;findByEmailOrUser(String email, String userId)&lt;/td&gt;
      &lt;td&gt;여러 필드를 or로 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Between&lt;/td&gt;
      &lt;td&gt;findByCreatedAtBetween(Date fromDate, Date toDate)&lt;/td&gt;
      &lt;td&gt;필드의 두 값 사이에 있는 항목 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;LessThan&lt;/td&gt;
      &lt;td&gt;findByAgeGraterThanEqual(int age)&lt;/td&gt;
      &lt;td&gt;작은 항목 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GreaterThanEqual&lt;/td&gt;
      &lt;td&gt;findByAgeGreaterThanEqual(int age)&lt;/td&gt;
      &lt;td&gt;크거나 같은 항목 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Like&lt;/td&gt;
      &lt;td&gt;findByNameLike(String name)&lt;/td&gt;
      &lt;td&gt;like 검색(부분적으로 일치하는 칼럼 검색)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;IsNull&lt;/td&gt;
      &lt;td&gt;findByJobIsNull()&lt;/td&gt;
      &lt;td&gt;Null인 항목 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;In&lt;/td&gt;
      &lt;td&gt;findByJob(String …jobs)&lt;/td&gt;
      &lt;td&gt;여러 값 중에 속하는 항목 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OrderBy&lt;/td&gt;
      &lt;td&gt;findByEmailOrderByNameAsc(String email)&lt;/td&gt;
      &lt;td&gt;검색 결과를 정렬해 전달&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;@Query&lt;/strong&gt;
Repository에서 @Query를 선언해 직접 sql을 입력할 수도 있다.
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@Query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;select u from User u where u.emailAddress = ?1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByEmailAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emailAddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Pageable&lt;/strong&gt;
  Query 메소드의 입력변수로 아래와 같이 Pageable 변수를 추가하면 Page타입을 반환형으로 사용할 수 있다.&lt;/p&gt;

    &lt;p&gt;Pageable 객체를 통해 페이징과 정렬을 위한 파라미터를 전달한다.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Pageable 인스턴스와 page, size, sort 파라미터를 사용해 페이징을 구현할 수 있다.&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Repository&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JpaRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;UserEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findByName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; 
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Pageable 입력 변수는 Controller에서부터 전달받아야 한다.&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@RestController&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/member&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;UserService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; 

      &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getUsers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;userService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Repository의 쿼리 메소드나 어노테이션에 대한 전체 가이드는 &lt;a href=&quot;https://docs.spring.io/spring-data/jpa/docs/1.10.1.RELEASE/reference/html/#jpa.sample-app.finders.strategies&quot;&gt;여기&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-04/JPA-repository</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-04/JPA-repository</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>ORM 도구</title>
        <description>&lt;h2 id=&quot;orm-도구의-활용&quot;&gt;ORM 도구의 활용&lt;/h2&gt;
&lt;p&gt;자바에서는 데이터베이스 서버에 접속해서 쿼리를 수행하고, 그 결과를 프로그램 상에서 사용할 수 있도록 JDBC API를 제공한다.&lt;br /&gt;
-&amp;gt; JDBC : 자바로 데이터베이스 프로그래밍을 하기 위한 API, 기술 명세&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;JDBC를 이용해 개발을 진행하면 로직 처리를 SQL로 하게 되고, 자바의 언어적인 기능을 사용하기보다는 쿼리와 결과를 매핑하는 용도로만 사용하게 된다. &lt;br /&gt;SQL 코드의 반복을 줄이고 좀 더 객체 중심의 설계에 집중해서 개발을 진행하기 위해 ORM 도구를 사용한다.&lt;/p&gt;

&lt;h3 id=&quot;orm-object-relational-mapping&quot;&gt;ORM (Object Relational Mapping)&lt;/h3&gt;
&lt;p&gt;ORM : 객체와 관계형 데이터베이스의 데이터를 자동으로 매핑(연결)해주는 것&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Object(객체)와 Relation(관계형 데이터베이스) 간의 불일치 문제를 해결하기 위한 도구&lt;/li&gt;
  &lt;li&gt;ORM을 통해 객체 간의 관계를 바탕으로 SQL을 자동으로 생성&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;객체 지향적인 코드로 인해 더 직관적이고, 비즈니스 로직에 더 집중할 수 있다.
        &lt;ul&gt;
          &lt;li&gt;SQL Query가 아닌 직관적인 코드(메서드)로 데이터를 조작할 수 있어 개발자가 객체 모델로 프로그래밍하는 데 집중할 수 있도록 도와준다.&lt;/li&gt;
          &lt;li&gt;선언문, 할당, 종료 등의 부수적인 코드가 줄어듦&lt;/li&gt;
          &lt;li&gt;SQL의 절차적 접근이 아닌 객체 지향적인 접근으로 인해 생산성 증가&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;재사용 및 유지보수의 편리성 증가
        &lt;ul&gt;
          &lt;li&gt;ORM은 독립적으로 작성되어있고, 해당 객체들을 재활용할 수 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;DBMS에 대한 종속성 감소&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;단점&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;완벽히 ORM으로만 서비스를 구현하기 어려움&lt;/li&gt;
      &lt;li&gt;많은 프로시저를 가지는 시스템에선 ORM의 객체 지향적인 장점을 활용하기 어려움
        &lt;ul&gt;
          &lt;li&gt;이미 프로시저가 많은 시스템에선 다시 객체로 바꿔야하며, 그 과정에서 생산성 저하나 리스크가 많이 발생할 수 있다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;jpa-hibernate-spring-data-jpa&quot;&gt;JPA, Hibernate, Spring Data JPA&lt;/h3&gt;
&lt;p&gt;자바에서 자주 쓰이는 ORM 기술로는 JPA, Hibernate, Spring Data JPA 등이 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;JPA (Java Persistence API)
&lt;code class=&quot;highlighter-rouge&quot;&gt;기술 명세&lt;/code&gt;&lt;br /&gt;자바 어플리케이션에서 관계형 데이터베이스를 사용하는 방식을 정의한 인터페이스 (구현체 없음)
&lt;img src=&quot;implementation-of-jpa.png&quot; alt=&quot;jpa-implementation&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hibernate 
&lt;code class=&quot;highlighter-rouge&quot;&gt;JPA의 구현체&lt;/code&gt;로, JPA의 인터페이스를 직접 구현한 라이브러리&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spring Data JPA
&lt;code class=&quot;highlighter-rouge&quot;&gt;JPA를 쓰기 편하게 만들어놓은 모듈&lt;/code&gt;
NoSQL을 포함해, DB를 관계형이 아니라 Redis, MongoDB 등으로 변경하더라도 동일한 메서드 시그니처를 사용 가능
Repository라는 인터페이스를 제공&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Repository : JPA를 한 단계 더 추상화시킨 것&lt;/li&gt;
      &lt;li&gt;Repository의 구현에서 JPA를 사용함&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;JpaRepository.png&quot; alt=&quot;JpaRepository class diagram&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;ref : 
&lt;br /&gt;&lt;a href=&quot;https://suhwan.dev/2019/02/24/jpa-vs-hibernate-vs-spring-data-jpa/&quot;&gt;https://suhwan.dev/2019/02/24/jpa-vs-hibernate-vs-spring-data-jpa/&lt;/a&gt;
&lt;br /&gt;&lt;a href=&quot;https://gmlwjd9405.github.io/2019/02/01/orm.html&quot;&gt;https://gmlwjd9405.github.io/2019/02/01/orm.html&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Apr 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-04/about-JPA</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-04/about-JPA</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>JPA - Entity에 대해</title>
        <description>&lt;h2 id=&quot;데이터베이스와-객체-매핑-방법&quot;&gt;데이터베이스와 객체 매핑 방법&lt;/h2&gt;

&lt;h3 id=&quot;entity-클래스-설정&quot;&gt;Entity 클래스 설정&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Entity&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Entity 클래스 : 데이터베이스 스키마의 내용을 자바 클래스로 표현할 수 있는 대상
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;해당 클래스에 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Entity&lt;/code&gt; 어노테이션을 선언해 엔티티 매니저가 관리해야 할 대상임을 표시&lt;/p&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                    
      &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;IDENTITY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectSummary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    

      &lt;span class=&quot;nd&quot;&gt;@CreationTimestamp&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Timestamp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;regDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@UpdateTimestamp&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Timestamp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updateDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@OneToOne&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mappedBy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;project&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectInfo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@OneToMany&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mappedBy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;project&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProjectMember&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectMembers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;클래스 내부의 변수들은 각각 데이터베이스 테이블 내의 컬럼이 된다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;주의
    &lt;ul&gt;
      &lt;li&gt;기본 생성자 필수
        &lt;ul&gt;
          &lt;li&gt;파라미터가 없는 public 또는 protected 생성자가 필요하다.&lt;/li&gt;
          &lt;li&gt;JPA spec으로 규정되어 있다.
  Why? JPA를 구현해서 쓰는 라이브러리들이 다양한 기술(Ex. Reflection)을 사용해서 객체를 프록싱할 때 필요하기 때문.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;final 클래스, enum, interface, inner 클래스에는 사용할 수 없다.&lt;/li&gt;
      &lt;li&gt;저장할 필드에 final을 사용하면 안 된다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;속성
    &lt;ul&gt;
      &lt;li&gt;name
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Entity(name = &quot;Project&quot;)&lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;JPA에서 사용할 엔티티 이름을 지정&lt;/li&gt;
          &lt;li&gt;기본값: 클래스 이름을 그대로 사용&lt;/li&gt;
          &lt;li&gt;패키지 간에 엔티티 이름이 겹치지 않도록 주의&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Table&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;@Entity 에노테이션을 사용할 때 실제 데이터베이스의 테이블명과 클래스명이 다른 경우에는 @Table 어노테이션을 추가해 매칠할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tbl_proj&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ProjectEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;필드와-컬럼-매핑&quot;&gt;필드와 컬럼 매핑&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;@Column&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;데이터베이스의 컬럼을 매핑하는 어노테이션&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;속성
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;name&lt;/p&gt;

        &lt;p&gt;데이터베이스 칼럼과 엔티티 내 변수를 각기 다른 이름으로 매핑할 때 사용&lt;/p&gt;
        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project_id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;insertable&lt;/p&gt;

        &lt;p&gt;엔티티 저장 시 해당 필드를 저장할 것인지 결정한다.&lt;br /&gt;false로 설정하면 데이터베이스에 컬럼으로 저장하지 않는다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;updatable&lt;/p&gt;

        &lt;p&gt;컬럼 수정(update) 시 데이터베이스에 이를 반영할 것인지 여부를 결정한다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  @Column(updatable = false)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;위와 같이 설정하면 컬럼을 수정해도 데이터베이스에 반영되지 않는다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;nullable&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  @Column(nullable = false)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;위와 같은 설정은 데이터베이스에서의 NOT NULL과 같다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;columnDefinition&lt;/p&gt;

        &lt;p&gt;직접 컬럼 정보를 작성할 수 있다.&lt;/p&gt;

        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  @Column(columnDefinition = &quot;varchar(100) default 'EMPTY'&quot;)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;length&lt;/p&gt;

        &lt;p&gt;문자 길이 제약 조건으로, String 타입에만 사용 가능하다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;precision, scale(DDL)&lt;/p&gt;

        &lt;p&gt;BigDecimal 타입에서 사용한다.(BigInteger 가능) precision은 소수점을 포함한 전체 자리수이고, scale은 소수점 자릿수이다.&lt;br /&gt;double랑 float타입에는 적용 되지 않는다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;@Enumerated&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enum 타입을 매핑할 때 사용한다.&lt;br /&gt;
아래는 일반 사용자와 관리자 구분을 하는 UserRole enum에 대한 예제이다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cm&quot;&gt;/**
 * Created by yun_dev1 on 2016-12-26.
 */&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRole&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//0&lt;/span&gt;
    &lt;span class=&quot;no&quot;&gt;ADMIN&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위 enum을 사용하는 entity에서의 선언은 다음과 같이 한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;role&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Enumerated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;EnumType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ORDINAL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserRole&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;@Temporal&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;날짜 타입을 매핑할 때 사용한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;타입
    &lt;ul&gt;
      &lt;li&gt;DATE: 날짜, DB의 date 타입과 매핑
  ex) 2019-08-13
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  @Temporal(TemporalType.DATE)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;TIME: 시간, DB의 time 타입과 매핑
  ex) 14:20:38&lt;/li&gt;
      &lt;li&gt;TIMESTAMP: 날짜와 시간, DB의 timestamp 타입과 매핑
  ex) 2019-08-13 14:20:38&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;java 8의 LocalDate(date), LocalDateTime(timestamp) 을 사용할 때는 생략 가능&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;@Lob&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DB에서 varchar를 넘어서는 큰 내용을 넣고 싶은 경우에 사용&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;필드의 길이 제한이 없다.&lt;/li&gt;
  &lt;li&gt;@Lob에는 지정할 수 있는 속성이 없다.&lt;/li&gt;
  &lt;li&gt;매핑하는 필드의 타입에 따라 DB의 BLOB, CLOB과 매핑된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;@Transient&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;특정 필드를 컬럼에 매핑하지 않음.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;DB에 관계없이 메모리에서만 사용하고자 하는 객체에 해당 annotation을 사용&lt;/li&gt;
  &lt;li&gt;해당 annotation이 붙은 필드는 DB에 저장, 조회가 되지 않는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;리스너&quot;&gt;리스너&lt;/h3&gt;

&lt;p&gt;JPA의 리스너 기능은 entity의 생명주기에 따른 이벤트를 처리할 수 있도록 한다.&lt;br /&gt;각 어노테이션은 다음과 같은 시점에 해당 메서드를 호출한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@PrePersist&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;@PrePersist는 persist() 메서드를 호출해 entity를 영속성 컨텍스트에 관리하기 직전에 해당 메서드를 호출한다.
  날짜와 같이 매핑 시에 값 참조를 위해서 미리 인스턴스가 생성되어야 하는 필드에 사용한다.&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@PrePersist&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@PreUpdate&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;flush나 commit을 호출해서 엔티티를 데이터베이스에 수정하기 직전 호출 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@PostLoad&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;entity가 영속성 컨텍스트에 조회된 직후 또는 refresh()를 호출한 후 호출 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@PreRemove&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;remove() 메서드를 호출해서 엔티티를 영속성 컨텍스트에서 삭제하기 직전에 호출.&lt;br /&gt;또한 삭제 명령어로 영속성 전이가 일어날 때도 메서드를 호출되게 한다.&lt;br /&gt;orphanRemoval에 대해서는 flush나 commit시 호출 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@Postpersist&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;flush나 commit을 호출해서 엔티티를 데이터베이스에 저장한 직후에 호출된다.&lt;br /&gt;식별자가 항상 존재한다.&lt;br /&gt;참고로 식별자 생성 전략이 IDENTITY면 식별자를 생성하기 위해 persist()를 호출한 직후에 바로 Postpersist가 호출 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@PostUpdate&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;flush나 commit을 호출해서 엔티티를 데이터베이스에 수정한 직후에 호출 된다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;@PostRemove&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;flush나 commit을 호출해서 엔티티를 데이터베이스에 삭제한 직후에 호출된다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Entity 클래스 내부에서 각 리스너 어노테이션은 여러 번 선언될 수 없다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;이름 매핑 전략 변경하기&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;단어를 구분할 때 자바는 주로 카멜 표기법을 사용하고, 데이터베이스는 언더스코어(_)를 사용한다.&lt;br /&gt;데이터베이스 칼럼과 엔티티 내 변수를 각기 다른 이름으로 매핑하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Column.name&lt;/code&gt; 속성을 사용해야 한다.&lt;/p&gt;

&lt;p&gt;name 속성을 사용해 직접 매핑 전략을 구현해도 되지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;hibernate.ejb.naming_strategy&lt;/code&gt; 속성을 사용하면 이름 매핑 전략을 변경할 수 있다.&lt;br /&gt;이 클래스는 테이블 명이나 컬럼 명이 생략되면 자바의 카멜 표기법을 테이블의 언더스코어 표기법으로 매핑한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hibernate.ejb.naming_strategh&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.hibernate.cfg.ImprovedNamingStrategh&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;데이터베이스와-키-매핑&quot;&gt;데이터베이스와 키 매핑&lt;/h3&gt;

&lt;p&gt;데이터베이스의 기본키와 entity 간의 매핑을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Id&lt;/code&gt; 어노테이션을 사용한다.&lt;/p&gt;

&lt;p&gt;기본키 할당 방식에는 두 가지가 있다&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;직접할당&lt;/strong&gt; : 기본키를 어플리케이션에서 직접 할당&lt;/p&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;//기본 키 직접 할당&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;자동생성&lt;/strong&gt; : 데이터베이스가 자동으로 할당&lt;/p&gt;

    &lt;p&gt;ex) 오라클 - sequence, MySQL - auto_increment
  데이터베이스 종류마다 sequence, auto_increment 등 기본키 자동생성을 지원하는 방법이 다르기 때문에, Spring Data JPA는 4가지 어노테이션을 지원한다.
  &lt;br /&gt;@Id 어노테이션 밑에 &lt;code class=&quot;highlighter-rouge&quot;&gt;@GeneratedValue(strategy = GenerationType.방식)&lt;/code&gt;을 선언해 사용한다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;SEQUENCE&lt;/strong&gt; : 데이터베이스의 시퀀스 객체와 매핑
        &lt;ul&gt;
          &lt;li&gt;주로 시퀀스를 지원하는 Oracle, PostgresSQL, DB2, H2에서 사용&lt;/li&gt;
          &lt;li&gt;@SequenceGenerator를 사용하여 시퀀스 생성기를 등록하고, 실제 데이터베이스의 생성될 시퀀스이름을 지정해줘야 함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;IDENTITY&lt;/strong&gt; : 기본 키 생성을 데이터베이스에 위임
        &lt;ul&gt;
          &lt;li&gt;주로 MySQL, PostgresSQL, SQL Server, DB2에서 사용&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;TABLE&lt;/strong&gt; : 키 값을 데이터베이스 테이블로 표현
        &lt;ul&gt;
          &lt;li&gt;키 생성 전용 테이블을 하나 만들고 여기에 이름과 값으로 사용할 컬럼을 만드는 방법&lt;/li&gt;
          &lt;li&gt;데이터베이스 종류와 상관없이 모든 데이터베이스에 적용 가능&lt;/li&gt;
        &lt;/ul&gt;

        &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MY_SEQUENCES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;sequence_name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;next_val&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bigint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@TableGenerator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BOARD_SEQ_GENERATOR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;MY_SEQUENCES&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;pkColumnValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BOARD_SEQ&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allocationSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;TABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;BOARD_SEQ_GENERATOR&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;logic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;EntityManger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;em&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;persist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;board.id = &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;board&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// 출력 : board.id = 1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;

        &lt;p&gt;MY_SEQUENCES 테이블에 값이 없으면 JPA가 값을 INSERT&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;AUTO&lt;/strong&gt; : 데이터베이스에 따라서 IDENTITY, SEQUENCE, TABLE 중 하나를 자동으로 선택
        &lt;ul&gt;
          &lt;li&gt;데이터베이스 종류에 의존적이지 않음&lt;/li&gt;
          &lt;li&gt;데이터베이스를 변경해도 코드를 수정할 필요 없음&lt;/li&gt;
          &lt;li&gt;ex) 오라클의 경우, SEQUENCE를 자동으로 선택해 사용&lt;/li&gt;
        &lt;/ul&gt;

        &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;nd&quot;&gt;@Entity&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Project&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

      &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;@GeneratedValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GenerationType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;AUTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;projectSummary&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;
&lt;a href=&quot;https://gmlwjd9405.github.io/2019/08/11/entity-mapping.html&quot;&gt;https://gmlwjd9405.github.io/2019/08/11/entity-mapping.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://ithub.tistory.com/24&quot;&gt;https://ithub.tistory.com/24&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://ultrakain.gitbooks.io/jpa/chapter4/chapter4.6.html&quot;&gt;https://ultrakain.gitbooks.io/jpa/chapter4/chapter4.6.html&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://wonwoo.ml/index.php/post/995&quot;&gt;http://wonwoo.ml/index.php/post/995&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 07 Apr 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-04/JPA-entity-mapping</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-04/JPA-entity-mapping</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>REST에 대해</title>
        <description>&lt;h1 id=&quot;about-rest&quot;&gt;About REST&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;rest.png&quot; alt=&quot;REST&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;HTTP의 주요 저자 중 한 명인 로이 필딩이 웹 설계의 우수성에 비해 제대로 사용되어지지 못하는 모습에 안타까워하며&lt;br /&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;웹의 장점을 최대한 활용할 수 있는 아키텍쳐&lt;/code&gt;로써 발표함&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;정의&quot;&gt;정의&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;자원을 이름으로 구분하여 해당 자원의 상태(정보)를 주고 받는 모든 것
    &lt;ul&gt;
      &lt;li&gt;자원이란, 소프트웨어가 관리하는 모든 것&lt;br /&gt;문서, 그림, 저장된 데이터(DBMS), 해당 소프트웨어 자체 등&lt;/li&gt;
      &lt;li&gt;DB의 학생 정보가 자원일 때, ‘student’를 자원의 표현으로 정함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP 기반으로 자원에 접근하는 방식을 정의한 아키텍쳐&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;월드 와이드 웹(www)과 같은 분산 하이퍼미디어 시스템을 위한 소프트웨어 개발 아키텍쳐&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;구성&quot;&gt;구성&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;자원(Resource)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;URI&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;행위(Verb)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;HTTP Method&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;표현(Respresentations)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;특성&quot;&gt;특성&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;클라이언트/서버 구조&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;클라이언트와 서버가 서로 독립적으로 구분되어야 함&lt;/li&gt;
      &lt;li&gt;서버 또는 클라이언트 증설 시에 서로간의 의존성 때문에 확장에 문제가 되는 일이 없어야 함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;상태 없음(Stateless)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;통신 시에 서버는 클라이언트의 상태를 기억할 필요가 없음
  // HTTP는 비상태 프로토콜로, 
  // 클라이언트에서 상태 관리는 쿠키
  // 서버에서의 상태 관리는 세션&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;레이어드 아키텍쳐(Layered Architecture)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;서버와 클라이언트 사이에 게이트웨이, 방화벽, 프록시 등이 있는 것처럼 다계층 형태로 레이어를 추가, 수정, 제거할 수 있어야 함.&lt;/li&gt;
      &lt;li&gt;확장성 지님&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;캐시(cache)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;REST는 HTTP가 가진 캐싱 기능 적용 가능&lt;/li&gt;
      &lt;li&gt;캐시를 가질 경우, 클라이언트가 캐시를 통해서 응답을 재사용할 수 있음&lt;/li&gt;
      &lt;li&gt;이를 통해 서버의 부하를 낮춤&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;코드 온 디멘드(Code on demand)&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;요청이 오면 코드를 줌&lt;/li&gt;
      &lt;li&gt;특정 시점에 서버가 특정 기능을 수행하는 스크립트 또는 플러그인을 클라이언트에 전달해 해당 기능을 동작하도록 함
  ex) 자바스크립트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;통합 인터페이스&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;서버와 클라이언트 간의 상호 작용은 일관된 인터페이스들 위에서 이뤄짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rest-인터페이스-규칙&quot;&gt;REST 인터페이스 규칙&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;리소스 식별&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;리소스는 URI와 같은 고유 식별자를 통해 표현됨&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;표현을 위한 리소스 처리&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;같은 데이터에 대해서 표현할 때, JSON, XML, HTML과 같이 다양한 콘텐츠 유형으로 표현 가능&lt;/li&gt;
      &lt;li&gt;데이터 자체는 변경되지 않음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;자기 묘사 메시지&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;HTTP 통신 시, Http header에 메타 데이터 정보를 추가해 데이터에 대한 설명을 담을 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;애플리케이션의 상태에 대한 하이퍼미디어&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;단순한 데이터 전달이 아닌 링크 정보를 포함해 웹을 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;restful&quot;&gt;RESTful&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;REST 방식을 따르는 시스템을 RESTful이라 지칭
    &lt;ul&gt;
      &lt;li&gt;REST API를 제공하는 시스템을 ‘RESTful’하다고 할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RESTful 하지 못한 경우
    &lt;ul&gt;
      &lt;li&gt;Ex1) CRUD 기능을 모두 POST로만 처리하는 API&lt;/li&gt;
      &lt;li&gt;Ex2) route에 resource, id 외의 정보가 들어가는 경우(/students/updateName)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;rest-api&quot;&gt;REST API&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;restapi.png&quot; alt=&quot;REST API&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;REST 기반으로 서비스 API를 구현한 것&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rest-api-설계&quot;&gt;REST API 설계&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;URI로 자원을 표현&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;URI: Uniform Resource Identifier&lt;/li&gt;
      &lt;li&gt;동사보사는 명사를 사용해 자원을 표현하는데 중점을 두어야 함(행위에 대한 표현이 들어가면 안됨)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;자원에 대한 행위는 HTTP Method를 사용해 표현&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;HTTP Method: GET / POST / PUT / DELETE등의 HTTP 프로토콜 사용 시의 호출 방식
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  GET /members/delete/1 (X)
  DELETE /members/1 (O)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;h2 id=&quot;uri-설계-규칙&quot;&gt;URI 설계 규칙&lt;/h2&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;’/’(슬래시)는 계층 관계를 나타내는 데 사용
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  /리소스명/리소스 ID/관계가 있는 다른 리소스명
  ex) GET : /users/{userid}/devices 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;마지막 문자로 ‘/’를 포함하지 않음&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;‘_‘(언더바)보다는 ‘-‘(하이픈)을 권장
    &lt;ul&gt;
      &lt;li&gt;긴 경로 사용 시 ‘-‘를 통해 가독성을 높임&lt;/li&gt;
      &lt;li&gt;‘_‘사용은 해석에 혼란을 줄 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;URI 경로에는 소문자가 적합&lt;/li&gt;
  &lt;li&gt;파일 확장자는 포함시키지 않음
    &lt;ul&gt;
      &lt;li&gt;Accept header를 사용&lt;br /&gt;(컨텐츠 타입을 명시하는 Request type의 header)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  http://restapi.example.com/members/soccer/345/photo.jpg (X)
  GET / members/soccer/345/photo HTTP/1.1 Host: restapi.example.com Accept: image/jpg (O)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;reference&quot;&gt;Reference&lt;/h1&gt;

&lt;p&gt;REST의 정의와 개념, REST API: &lt;a href=&quot;https://gmlwjd9405.github.io/2018/09/21/rest-and-restful.html&quot;&gt;https://gmlwjd9405.github.io/2018/09/21/rest-and-restful.html&lt;/a&gt;
&lt;br /&gt;URI 설계 규칙: https://medium.com/@dydrlaks/rest-api-3e424716bab
&lt;br /&gt;REST API 설계 규칙: &lt;a href=&quot;https://meetup.toast.com/posts/92&quot;&gt;https://meetup.toast.com/posts/92&lt;/a&gt;
&lt;br /&gt;RESTful API 설계 가이드 (예제 존재): &lt;a href=&quot;https://sanghaklee.tistory.com/57&quot;&gt;https://sanghaklee.tistory.com/57&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Apr 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-04/about-REST</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-04/about-REST</guid>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>Elasticsearch와 Kibana설치 방법</title>
        <description>&lt;h1 id=&quot;how-to-install-elasticsearch-and-kibana&quot;&gt;How to install elasticsearch and kibana&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Elasticsearch 설치&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Kibana를 사용하기 위해서는 Elasticsearch가 필수이며, 같은 버전을 사용해야 한다.&lt;/p&gt;

    &lt;p&gt;Elasticsearch는 Java 8 이상이 필요하다. &lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Java 설정이 확인되었다면, 아래 링크를 통해 elasticsearch 압축 파일을 다운받을 수 있다.&lt;/p&gt;

    &lt;p&gt;파일 다운로드: &lt;a href=&quot;https://www.elastic.co/kr/downloads/elasticsearch&quot;&gt;https://www.elastic.co/kr/downloads/elasticsearch&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;파일 다운이 완료되면, 다음과 같은 명령어를 통해 압축을 푼다. 예시에서는 elasticsearch 7.6.1 버전을 사용했다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  tar -xvf elasticsearch-7.6.1.tar.gz
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;다음과 같이 bin 디렉토리로 이동한다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  cd elasticsearch-7.6.1/bin
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;클러스터 시작을 위해, 다음과 같은 명령어를 입력한다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  ./elasticsearch
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;정상적으로 설치가 완료되었다면 
  &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:9200&lt;/code&gt; 접속 시 아래와 같은 화면을 확인할 수 있다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;elasticsearch-install-result.png&quot; alt=&quot;elasticsearch install result&quot; /&gt;&lt;/p&gt;

    &lt;hr /&gt;
    &lt;p&gt;Elasticsearch 설치 방법: &lt;a href=&quot;https://www.elastic.co/guide/kr/elasticsearch/reference/current/gs-installation.html&quot;&gt;https://www.elastic.co/guide/kr/elasticsearch/reference/current/gs-installation.html&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Kibana 설치&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;아래 링크에서 Kibana 압축 파일을 다운받을 수 있다.&lt;/p&gt;

    &lt;p&gt;파일 다운로드: &lt;a href=&quot;https://www.elastic.co/kr/downloads/kibana&quot;&gt;https://www.elastic.co/kr/downloads/kibana&lt;/a&gt;
  혹은, 다음과 같은 명령어를 이용해 파일을 다운받는다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  wget https://artifacts.elastic.co/downloads/kibana/kibana-7.6.1-linux-x86_64.tar.gz
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;예시에서는 Kibana 7.6.1 버전을 사용했다. &lt;br /&gt;(설치된 Elasticsearch와 같은 버전을 사용해야 한다)&lt;/p&gt;

    &lt;p&gt;파일 다운이 완료되면, 아래 명령어를 이용해 sha1sum 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;shasum&lt;/code&gt;으로 생성된 SHA를 published SHA와 비교하고, 압축을 푼다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  sha1sum kibana-7.6.1-linux-x86_64.tar.gz 
  tar -xzf kibana-7.6.1-linux-x86_64.tar.gz
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;다음과 같은 명령어를 실행해 Kibana를 시작한다.&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;  cd kibana-7.6.1-linux-x86_64
  ./bin/kibana
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;정상적으로 설치가 완료되었다면 
  &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:5601&lt;/code&gt; 접속 시 아래와 같이 Kibana 시작 화면을 확인할 수 있다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;kibana-install-result.png&quot; alt=&quot;kibana install result&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;아래와 같은 화면이 뜰 경우, elasticsearch와의 버전이 맞지 않거나 elasticsearch가 설치되지 않은 것이다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;kibana-install-wrong-result.png&quot; alt=&quot;kibana install wrong result&quot; /&gt;&lt;/p&gt;

    &lt;hr /&gt;
    &lt;p&gt;Kibana 설치 방법: &lt;a href=&quot;https://www.elastic.co/guide/kr/kibana/current/targz.html&quot;&gt;https://www.elastic.co/guide/kr/kibana/current/targz.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 16 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-03/elasticsearch-kibana-install</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-03/elasticsearch-kibana-install</guid>
        
        
        <category>etc</category>
        
      </item>
    
      <item>
        <title>Kibana에 대해</title>
        <description>&lt;h1 id=&quot;kibana&quot;&gt;Kibana&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;회사 일로 kibana에 대해 조사해봤다.&lt;/em&gt;
&lt;em&gt;내가 쓴거니까 올려도 될것같다!!&lt;/em&gt;
&lt;br /&gt;
&lt;em&gt;아직 예제는 못돌려봤다….&lt;/em&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;목차&quot;&gt;목차&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;개요&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#license&quot;&gt;라이선스&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#datatype&quot;&gt;데이터타입&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#function&quot;&gt;기능&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#feature&quot;&gt;특징&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot;&gt;레퍼런스 현황&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#example&quot;&gt;예제&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. 개요&lt;/strong&gt;&lt;a name=&quot;introduction&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Elasticsearch가 logstash를 통해 수집한 데이터를 시각화하는 역할을 함
elasticsearch, logstash와 함께 동작 (ELK)&lt;/li&gt;
  &lt;li&gt;다음과 같은 주요 기능을 지님
    &lt;ul&gt;
      &lt;li&gt;&lt;u&gt;Discover&lt;/u&gt;: 데이터를 한 눈에 확인&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Visualize&lt;/u&gt;: 수집된 결과를 시각화&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Dashboard&lt;/u&gt;: 시각화한 개체 모아보기&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Setting&lt;/u&gt;: index 등록 및 환경설정&lt;/li&gt;
    &lt;/ul&gt;

    &lt;hr /&gt;

    &lt;p&gt;공식 소개: &lt;a href=&quot;https://www.elastic.co/kr/kibana&quot;&gt;https://www.elastic.co/kr/kibana&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;Github repo: &lt;a href=&quot;https://github.com/elastic/kibana&quot;&gt;https://github.com/elastic/kibana&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;2. 라이선스&lt;/strong&gt;&lt;a name=&quot;license&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;오픈소스, 무료로 제공&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;제약 존재&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;You agree not to:&lt;br /&gt;
  (iv) use Elastic Software
  Object Code for providing time-sharing services, any software-as-a-service,
  service bureau services or as part of an application services provider or
  other service offering (collectively, “SaaS Offering”) where obtaining access
  to the Elastic Software or the features and functions of the Elastic Software
  is a primary reason or substantial motivation for users of the SaaS Offering
  to access and/or use the SaaS Offering (“Prohibited SaaS Offering”)
  &lt;br /&gt;…&lt;br /&gt;
  (vi)
  alter or remove any Marks and Notices in the Elastic Software.&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;ul&gt;
      &lt;li&gt;saas 금지&lt;/li&gt;
      &lt;li&gt;marks, notices 못 없앰&lt;/li&gt;
    &lt;/ul&gt;

    &lt;hr /&gt;

    &lt;p&gt;Elastic-license 문서: &lt;a href=&quot;https://github.com/elastic/kibana/blob/7.6/licenses/ELASTIC-LICENSE.txt&quot;&gt;https://github.com/elastic/kibana/blob/7.6/licenses/ELASTIC-LICENSE.txt&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. 데이터타입&lt;/strong&gt;&lt;a name=&quot;datatype&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Json&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. 기능&lt;/strong&gt;&lt;a name=&quot;function&quot;&gt;&lt;/a&gt;
&lt;br /&gt;Kibana의 시각화 관련 기능들이다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;차트&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;메트릭&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;데이터 표&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Vega(사용자 정의)&lt;/strong&gt;
&lt;br /&gt;사용자 정의 시각화를 가능케 한다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;vega-example.jpg&quot; alt=&quot;vega example&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Time Series Visual Builder(TSVB)&lt;/strong&gt;
&lt;br /&gt;데이터 집계와 파이프라인 집계를 결합해 복잡한 데이터를 표시하는 시계열 데이터 시각화 도구이다.
&lt;br /&gt;TSVB는 다음과 같은 종류의 시각화를 제공한다.
    &lt;ul&gt;
      &lt;li&gt;&lt;u&gt;Time Series&lt;/u&gt;
  &lt;img src=&quot;tsvb-timeseries.png&quot; alt=&quot;TSVB-Time Series&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Metric&lt;/u&gt;
  &lt;img src=&quot;tsvb-metric.png&quot; alt=&quot;TSVB-Metric&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Top N&lt;/u&gt;
  &lt;img src=&quot;tsvb-top-n.png&quot; alt=&quot;TSVB-Top N&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;Gauge&lt;/li&gt;
      &lt;li&gt;Markdown&lt;/li&gt;
      &lt;li&gt;Table&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Canvas&lt;/strong&gt;
&lt;br /&gt;CSS요소 추가, 디자인 요소 활용 등을 통해 시각화 결과를 커스터마이징 가능케 한다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;canvas-log-analysis.png&quot; alt=&quot;canvas example-log analysis&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;canvas-infrastructure.png&quot; alt=&quot;canvas example-infrastructure&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Dashboard&lt;/strong&gt;
&lt;br /&gt;Kibana에서 생성한 시각화와 검색 결과를 모아볼 수 있으며, 저장/공유 기능을 제공한다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;dashboard_example.png&quot; alt=&quot;dashboard example&quot; /&gt;&lt;/p&gt;

    &lt;hr /&gt;

    &lt;p&gt;전체 기능 목록: &lt;a href=&quot;https://www.elastic.co/kr/kibana/features&quot;&gt;https://www.elastic.co/kr/kibana/features&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;구독 형태에 따른 제공 기능 목록: &lt;a href=&quot;https://www.elastic.co/kr/subscriptions&quot;&gt;https://www.elastic.co/kr/subscriptions&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;5. 특징&lt;/strong&gt;&lt;a name=&quot;feature&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;REST API 제공&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Kiabana spaces APIs&lt;/li&gt;
      &lt;li&gt;Kibana role management APIs&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Saved objects APIs&lt;/u&gt;&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;Import and export dashboard APIs&lt;/u&gt;&lt;/li&gt;
      &lt;li&gt;Logstash configuration management APIs&lt;/li&gt;
      &lt;li&gt;Upgrade assistant APIs&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Kibana의 일부 기능들은 REST API를 통해 제공되며, 이를 통해 생성된 object(대시보드, 시각화 결과, 인덱스 패턴 등)를 다루는 것이 가능하다.&lt;/p&gt;

    &lt;p&gt;API 사용 가이드: &lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/api.html&quot;&gt;https://www.elastic.co/guide/en/kibana/current/api.html&lt;/a&gt;
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;다양한 Plugin 제공&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;plugins 목록: &lt;a href=&quot;https://www.elastic.co/guide/en/kibana/current/known-plugins.html&quot;&gt;https://www.elastic.co/guide/en/kibana/current/known-plugins.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;데이터 소스&lt;/strong&gt;
&lt;br /&gt;Kibana는 다음과 같은 데이터 소스를 가진다
    &lt;ul&gt;
      &lt;li&gt;운영체제&lt;/li&gt;
      &lt;li&gt;웹 서버 및 프록시&lt;/li&gt;
      &lt;li&gt;데이터스토어 및 큐&lt;/li&gt;
      &lt;li&gt;클라우드 서비스&lt;/li&gt;
      &lt;li&gt;컨테이너 및 오케스트레이션&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;수집 제품 및 기능&lt;/strong&gt;
&lt;br /&gt;Kibana는 다음과 같은 데이터 수집 툴들과 연동 가능하다.
    &lt;ul&gt;
      &lt;li&gt;Filebeat, Metricbeat, Winlogbeat, Packetbeat, Heartbeat, Auditbeat&lt;/li&gt;
      &lt;li&gt;Functionbeat&lt;/li&gt;
      &lt;li&gt;Logstash&lt;/li&gt;
      &lt;li&gt;ES-Hadoop&lt;/li&gt;
      &lt;li&gt;파일 가져오기 마법사&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;공유 및 협업&lt;/strong&gt;
&lt;br /&gt;Kibana에서 생성한 객체 또는 대시보드는 다음과 같은 방법으로 공유 가능하다.
    &lt;ul&gt;
      &lt;li&gt;&lt;u&gt;임베디드 대시보드&lt;/u&gt;
  &lt;br /&gt;Kibana 대시보드로의 링크를 공유하거나, 웹 페이지에서 iframe으로 대시보드를 포함시킬 수 있다. 라이브/정적 대시보드 모두 가능하다.&lt;/li&gt;
      &lt;li&gt;&lt;u&gt;객체 내보내기 UI 및 API&lt;/u&gt;&lt;/li&gt;
      &lt;li&gt;저장된 쿼리&lt;/li&gt;
      &lt;li&gt;CSV 파일 내보내기&lt;/li&gt;
    &lt;/ul&gt;

    &lt;hr /&gt;

    &lt;p&gt;전체 기능 목록: &lt;a href=&quot;https://www.elastic.co/kr/kibana/features&quot;&gt;https://www.elastic.co/kr/kibana/features&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. 호환 프레임워크&lt;/strong&gt;&lt;a name=&quot;framework&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. 레퍼런스 현황&lt;/strong&gt;&lt;a name=&quot;reference&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;정돈되고 자세한 가이드 존재&lt;/p&gt;

    &lt;p&gt;공식 가이드: &lt;a href=&quot;https://www.elastic.co/guide/en/kibana/7.6/index.html&quot;&gt;https://www.elastic.co/guide/en/kibana/7.6/index.html&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글 ‘kibana’ 검색 결과 &lt;u&gt;약 2,360,000개&lt;/u&gt;, ‘kibana example’ 검색 결과 &lt;u&gt;약 576,000개&lt;/u&gt;, ‘kibana 예제’ 검색 결과 &lt;u&gt;약 6,900개&lt;/u&gt;로 많은 수의 예제와 관련 글이 존재
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;7. 예시&lt;/strong&gt;&lt;a name=&quot;example&quot;&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-03/kibana</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-03/kibana</guid>
        
        
        <category>etc</category>
        
      </item>
    
      <item>
        <title>Spring Boot Servlet 등록하기</title>
        <description>&lt;p&gt;Spring boot에서는 서블릿을 사용하기 위해 설정을 등록해야 한다.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;@Configuration&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletRegistrationConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletRegistrationBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NewServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getServletRegistrationBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;ServletRegistrationBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;NewServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registrationBean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletRegistrationBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NewServlet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;registrationBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addUrlMappings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/new&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registrationBean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NewServlet에는 등록하려는 서블릿이 들어가고,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;registrationBean.addUrlMappings(&quot;/new&quot;)&lt;/code&gt; 에는 서블릿의 urlPattern을 넣어주면 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;결과 코드는 위에 캡쳐해뒀다 ! 
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
이걸 몰라서 처음에 뭘 잘못 설정했나 하고 프로젝트를 몇번이나 다시 만들었다.&lt;/p&gt;
</description>
        <pubDate>Wed, 04 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-03/spring-boot-registering-servlet</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-03/spring-boot-registering-servlet</guid>
        
        
        <category>spring</category>
        
      </item>
    
      <item>
        <title>Jekyll에 emoji 추가하기</title>
        <description>&lt;p&gt;&lt;em&gt;jemoji 플러그인을 설치해 포스트에 귀여운 이모티콘을 넣어보자!!!!&lt;/em&gt;&lt;/p&gt;

&lt;h1 id=&quot;설치-방법&quot;&gt;설치 방법&lt;/h1&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;에 아래 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;gem 'jemoji'
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;추가 후, 다음 명령을 실행한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;bundle install
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;에 아래 추가&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;plugins:
  - jemoji
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;마찬가지로 다음 명령을 실행해 플러그인을 설치한다.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;gem install jemoji
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;사용&quot;&gt;사용&lt;/h1&gt;

&lt;p&gt;포스트 내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;:heardpulse:&lt;/code&gt; 이런 식으로 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;더 많은 이모티콘은 https://www.webfx.com/tools/emoji-cheat-sheet/ 여기서 찾을 수 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;나는 설치 과정에서는 문제가 없었지만,
알 수 없는 이유로 이모지 변환이 되지 않는다…ㅠㅠ&lt;/p&gt;

&lt;p&gt;그래도 나중에 다시 보고 해보려고 글은 쓴다!!!!!!!
나중에 깃허브 이슈에 올려봐야겠다.&lt;/p&gt;

&lt;h1 id=&quot;참조&quot;&gt;참조&lt;/h1&gt;
&lt;p&gt;jemoji repo: &lt;a href=&quot;https://github.com/jekyll/jemoji&quot;&gt;https://github.com/jekyll/jemoji&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Mar 2020 00:00:00 +0900</pubDate>
        <link>http://localhost:4000/articles/2020-03/jekyll-installing-jemoji</link>
        <guid isPermaLink="true">http://localhost:4000/articles/2020-03/jekyll-installing-jemoji</guid>
        
        
        <category>jekyll</category>
        
      </item>
    
  </channel>
</rss>
